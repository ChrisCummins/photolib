"""Unit tests for //util/photolib/shutterbug/shutterbug.py."""
import pathlib
import pytest
import sys
import tempfile
import typing
from absl import app
from absl import flags

from util.photolib.shutterbug import shutterbug


FLAGS = flags.FLAGS


# Test fixtures.

@pytest.fixture(scope='function')
def tempdir() -> pathlib.Path:
  with tempfile.TemporaryDirectory(prefix='phd_') as d:
    yield pathlib.Path(d)


@pytest.fixture(scope='function')
def photodir(tempdir: pathlib.Path) -> pathlib.Path:
  """Test fixture to create a """
  with open(tempdir / 'a.jpg', 'w') as f:
    f.write('Image A')
  with open(tempdir / 'b.jpg', 'w') as f:
    f.write('Image B')
  with open(tempdir / 'c.jpg', 'w') as f:
    f.write('Image C')
  yield tempdir


# Utility functions.


def _AssertIsPhotoDir(path: pathlib.Path) -> None:
  """Check that photodir (as generated by photodir test fixture) is valid."""
  assert (path / 'a.jpg').is_file()
  assert (path / 'b.jpg').is_file()
  assert (path / 'c.jpg').is_file()
  with open(path / 'a.jpg') as f:
    assert 'Image A' == f.read()
  with open(path / 'b.jpg') as f:
    assert 'Image B' == f.read()
  with open(path / 'c.jpg') as f:
    assert 'Image C' == f.read()


# Integration tests.

def test_end_to_end(tempdir: pathlib.Path, photodir: pathlib.Path):
  """Test end to end packing and unpacking a photodir."""
  _AssertIsPhotoDir(photodir)
  _ = shutterbug
  # TODO: shutterbug.mkchunks()


def main(argv: typing.List[str]):
  """Main entry point."""
  if len(argv) > 1:
    raise app.UsageError("Unknown arguments: '{}'.".format(' '.join(argv[1:])))
  sys.exit(pytest.main([__file__, '-vv']))


if __name__ == '__main__':
  flags.FLAGS(['argv[0]', '-v=1'])
  app.run(main)
